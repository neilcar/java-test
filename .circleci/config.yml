# StackRox inline orb sample
# author neil@stackrox.com

version: 2.1
orbs:
  rox-orb:
    jobs:
      rox-deployment-check:
        docker:
          - image: cimg/base:2020.10
        parameters:
          rox_api_token:
            description: API key with CI permissions
            type: string
          rox_central_endpoint:
            description: URL of Central (central.contoso.com:443 for example)
            type: string
          rox_deployment:
            description: Path/name of yaml to check
            type: string
        steps:
          - checkout
          - rox-roxctl-install:
              rox_api_token: <<parameters.rox_api_token>>
              rox_central_endpoint: <<parameters.rox_central_endpoint>>
          - run: >-
              ./roxctl deployment check --insecure-skip-tls-verify -e <<parameters.rox_central_endpoint>> --file <<parameters.rox_deployment>>
      rox-image-scan:
        docker:
          - image: cimg/base:2020.10
        parameters:
          rox_api_token:
            description: API key with CI permissions
            type: string
          rox_central_endpoint:
            description: URL of Central (central.contoso.com:443 for example)
            type: string
          rox_image_scan:
            description: Name of image to scan (neilcar/testimage:5 or registry.contoso.com/db_broker:latest for example)
            type: string
        steps:
          - rox-roxctl-install:
              rox_api_token: <<parameters.rox_api_token>>
              rox_central_endpoint: <<parameters.rox_central_endpoint>>
          - run: >-
              ./roxctl image scan -f --insecure-skip-tls-verify -e <<parameters.rox_central_endpoint>> --image <<parameters.rox_image_scan>> --format pretty
          - run: >-
              ./roxctl image check --insecure-skip-tls-verify -e <<parameters.rox_central_endpoint>> --image <<parameters.rox_image_scan>>
    commands:
      rox-roxctl-install:
        parameters:
          rox_api_token:
            description: API key with CI permissions
            type: string
          rox_central_endpoint:
            description: URL of Central (central.contoso.com:443 for example)
            type: string    
        steps:
          - run: >-
              curl -k -L -H "Authorization: Bearer <<parameters.rox_api_token>>" https://<<parameters.rox_central_endpoint>>/api/cli/download/roxctl-linux --output ./roxctl
          - run: chmod +x ./roxctl
jobs:
  build:
    docker:
      - image: cimg/base:2020.10
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS  # context / project UI env-var reference
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run: |
          docker build -t neilcar/docker-test:1 .
          docker login -u $DOCKER_USER -p $DOCKER_PASS 
          docker push neilcar/docker-test:1
workflows:
  scanimage:
    when: always
    jobs:
      - build:
          context: rox
          name: build
      - rox-orb/rox-image-scan: 
          context: rox
          name: scanimage
          requires:
            - build
          rox_central_endpoint: $ROX_CENTRAL_ENDPOINT
          rox_api_token: $ROX_API_TOKEN
          rox_image_scan: neilcar/docker-test:1
      - rox-orb/rox-deployment-check: 
          context: rox
          name: checkdeployment
          requires:
            - build
          rox_central_endpoint: $ROX_CENTRAL_ENDPOINT
          rox_api_token: $ROX_API_TOKEN
          rox_deployment: deploy.yml

